name: "CI"

on:
  push:
    branches:
      - main
      - features/**
    tags:
      - '*.*.*'
  pull_request:

env:
  DOTNET_NOLOGO: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, windows-latest]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - run: dotnet --info

      - if: contains(matrix.runs-on, 'ubuntu')
        run: ./build.sh

      - if: matrix.runs-on == 'windows-latest' && github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        run: ./build.cmd

      - if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        name: Publish nuget
        run: dotnet nuget push ./artifacts/*.nupkg --source "https://nuget.pkg.github.com/meniga/index.json" --api-key ${{ secrets.GITHUB_TOKEN }}
        env:
          NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

      # - if: matrix.runs-on == 'windows-latest' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      #   env:
      #     SignClientSecret: ${{ secrets.SIGNCLIENTSECRET }}
      #   run: |
      #     ./build.cmd sign
